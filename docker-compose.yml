

services:
  flask:
    build:
      context: ./flask_api
      dockerfile: Dockerfile
    container_name: flask
    restart: unless-stopped
    ports:
      - 5000:5000
    environment:
      APP_ENV: "prod"
      APP_DEBUG: "False"
      APP_PORT: 5000
      MONGODB_DATABASE: d42
      # MONGODB_USERNAME: mongodbuser
      # MONGODB_PASSWORD: your_mongodb_root_password
      MONGODB_HOSTNAME: mongodb
    volumes:
      - ./flask_api:/var/www
    depends_on:
      - mongodb
    networks:
      - backend

  mongodb:
    image: mongo:4.0.8
    container_name: mongodb
    restart: unless-stopped
    command: mongod
    environment:
      # MONGO_INITDB_ROOT_USERNAME: mongodbuser
      # MONGO_INITDB_ROOT_PASSWORD: your_mongodb_root_password
      MONGO_INITDB_DATABASE: d42
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    volumes:
      - mongodbdata:/data/db
    networks:
      - backend




networks:
  backend:
    driver: bridge

volumes:
  mongodbdata:
    driver: local
  # appdata:
  #   driver: local
